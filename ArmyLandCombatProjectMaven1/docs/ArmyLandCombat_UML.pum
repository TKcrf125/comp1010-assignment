@startuml

' Define packages
package combat {
  class ArmyLandCombat {
    +main(args: String[])
  }
}

package "combat.engine" {
  class GameEngine {
    -ui: ConsoleUI
    -pastScores: List<Integer>
    -SCORE_FILE: String
    +GameEngine(ui: ConsoleUI)
    +start(): void
    -playGame(): void
    -showTutorial(): void
    -buildTroopHistory(troops: List<Troop>): TroopNode
    -loadScores(): void
    -saveScores(): void
  }
}

package "combat.ui" {
  class ConsoleUI {
    +showMainMenu(): void
    +promptMenuChoice(): int
    +displayTutorial(steps: List<String>): void
    +displayScores(scores: List<Integer>): void
    +showBattleStatus(active: Troop, enemy: Troop): void
    +showWinner(message: String): void
  }
}

package "combat.util" {
  class InputUtil {
    -scanner: Scanner
    +readInt(prompt: String, min: int, max: int): int
    +waitForEnter(): void
  }
}

package "combat.domain" {
  class Troop {
    -name: String
    -health: int
    -attackPower: int
    -defencePower: int
    +isAlive(): boolean
    +attack(other: Troop): int
    +defend(): void
    +takeDamage(dmg: int): void
    +calculateScore(): int
    +getStatus(): String
  }

  class CombatTeam {
    -troops: List<Troop>
    -currentIndex: int
    +CombatTeam()
    +nextActive(): Troop
    +isDefeated(): boolean
    +getTroops(): List<Troop>
    +calculateScore(): int
  }

  class EnemyTeam {
    -troops: List<Troop>
    -currentIndex: int
    +EnemyTeam()
    +nextActive(): Troop
    +isDefeated(): boolean
  }

  class TroopNode {
    -data: Troop
    -next: TroopNode
    +TroopNode(data: Troop, next: TroopNode)
    +add(t: Troop): TroopNode
    +getData(): Troop
    +getNext(): TroopNode
  }
}

' Relationships
combat.ArmyLandCombat --> combat.engine.GameEngine : uses
combat.engine.GameEngine --> combat.ui.ConsoleUI : "has a"
combat.engine.GameEngine --> combat.domain.TroopNode : "builds"
combat.ui.ConsoleUI --> combat.domain.Troop : "uses"
combat.engine.GameEngine ..> combat.util.InputUtil : "calls"
combat.domain.CombatTeam --> combat.domain.Troop : "contains"
combat.domain.EnemyTeam --> combat.domain.Troop : "contains"
combat.domain.TroopNode --> combat.domain.Troop : "holds"
combat.domain.TroopNode --> combat.domain.TroopNode : "links to"

@enduml
